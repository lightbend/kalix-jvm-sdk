kalix {


  user-function-interface = "127.0.0.1"
  user-function-interface = ${?HOST}

  user-function-port = 8080
  user-function-port = ${?PORT}

  # default passivation timeout for entities
  passivation-timeout = 30s

  cross-service {
    # Kalix Runtime accepts up to this size of requests between services (Note: cannot be arbitrarily increased here,
    # controlled by proxy, only needed to align the gRPC client with what the proxy may emit)
    max-content-length: 12M
  }

  event-sourced-entity {
    # It is strongly recommended to not disable snapshotting unless it is known that
    # event sourced entities will never have more than 100 events (in which case
    # the default will anyway not trigger any snapshots)
    snapshot-every = 100

    # When EventSourcedEntity is deleted the existence of the entity is completely cleaned up after this duration..
    # The events and snapshots will be deleted later to give downstream consumers time to process all prior events,
    # including final deleted event.
    cleanup-deleted-after = 7 days
  }

  value-entity {
    # When ValueEntity is deleted the existence of the entity is completely cleaned up after this duration.
    cleanup-deleted-after = 7 days
  }

  discovery {
    # The path to a file on the classpath that contains a compiled descriptor that contains source info.
    # This descriptor should have been compiled by protobuf using the --descriptor_set_out and
    # --include_source_info flags. If this file is present, the Java SDK will use this to fill in the source
    # info for descriptors it sends to the proxy during discovery, since the descriptors compiled into the
    # generated Java source do not include source info. To disable use of such a descriptor for locating
    # source info, set this to "disabled".
    protobuf-descriptor-with-source-info-path = "/protobuf/descriptor-sets/user-function.desc"

    # By default all environment variables of the process are passed along to the proxy, they are used only for
    # substitution in the descriptor options such as topic names. This setting can
    # limit which variables are passed configuring this as a list of allowed names:
    # pass-along-env-allow = ["ENV_NAME1", "ENV_NAME2"]
    # or diable any environment variable pass along by setting it to an empty list:
    # pass-along-env-allow = []
    pass-along-env-allow = true
  }

  system {
    akka {
      loggers = ["akka.event.slf4j.Slf4jLogger"]
      loglevel = "DEBUG"
      logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

      actor {
        provider = local
        # Optimize for low resource usage. Blocking in user function wouldn't cause any critical problem
        # since it's only a local ActorSystem.
        internal-dispatcher = akka.actor.default-dispatcher
      }

      coordinated-shutdown {
        exit-jvm = on
        exit-code = 0

        reason-overrides {
          "kalix.javasdk.KalixRunner$BindFailure$" {
            exit-code = -1
          }
        }
      }

      http.server {
        preview.enable-http2 = on

        # Disable - we receive connections from localhost, so they'll never be dropped
        idle-timeout = infinite

        # Each entity type will share one client where each entity instance will use one stream,
        # that means this is the upper cap on how many entities of each type can live in one node
        # and have concurrent connections from the proxy
        http2.max-concurrent-streams = 30000

        http2.min-collect-strict-entity-size = 1

        # Kalix Runtime expects SDK to send reqs up to 12m to the SDK (and accepts 12m responses)
        parsing.max-content-length = 12M
      }
    }
  }

  telemetry {
     tracing {
        collector-endpoint = ""
        collector-endpoint =  ${?COLLECTOR_ENDPOINT}
     }
  }

  sdk-dispatcher {
    executor = "virtual-thread-executor"
    virtual-thread-executor {
      # if not on JDK 21
      fallback="fork-join-executor"
    }
  }
}
